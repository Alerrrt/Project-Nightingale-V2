import React from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import { motion } from 'framer-motion';

export const VulnerabilityAnalytics = ({ findings }) => {
  const severityCounts = findings.reduce((acc, finding) => {
    const severity = finding.severity;
    acc[severity] = (acc[severity] || 0) + 1;
    return acc;
  }, {});

  const chartData = Object.entries(severityCounts).map(([severity, count]) => ({
    severity,
    count,
  }));

  const CustomTooltip = ({ active, payload, label }) => {
    if (active && payload && payload.length) {
      return (
        <div className="bg-white dark:bg-neutral-800 p-4 rounded-lg shadow-lg border border-neutral-200 dark:border-neutral-700">
          <p className="font-medium">{label}</p>
          <p className="text-primary-600 dark:text-primary-400">
            Count: {payload[0].value}
          </p>
        </div>
      );
    }
    return null;
  };

  const renderChart = () => {
    if (!findings.length) {
      return (
        <div className="flex items-center justify-center h-64 text-neutral-500 dark:text-neutral-400">
          No data available
        </div>
      );
    }

    return (
      <ResponsiveContainer width="100%" height={300}>
        <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="severity" />
          <YAxis />
          <Tooltip content={<CustomTooltip />} />
          <Bar dataKey="count" fill="#0ea5e9" />
        </BarChart>
      </ResponsiveContainer>
    );
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="bg-white dark:bg-neutral-800 rounded-lg shadow-lg p-6"
    >
      <h2 className="text-2xl font-bold mb-6">Vulnerability Distribution</h2>
      {renderChart()}
    </motion.div>
  );
}; 